using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Collections.IEnumerable;

namespace ConsoleApplication1
{


    





class Program
    {
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% процедура вывода заданного символа в заданной координате %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        static void Draww(int X, int Y, char sym)
        {

            Console.SetCursorPosition(X, Y);//задаем координаты курсора
            Console.Write(sym); //выводим курсор на экран в заданных координатах

        }
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        static void Main(string[] args)   // точка входа в исполнение программы
        {
            ////=============================== организация вывода на экран точки 1    ========
            //int X1 = 5;
            //int Y1 = 5;

            //char sym1 = '*';

            //----------------------- Первый вариант обьявления экземпляра класса и присвоение значений полям -----------------------
            //Point P1 = new Point(); // создаем экземпляр класса "Point" номер_1
            //P1.X = 5;              //-присваиваем значения полям экземпляра  класса "Point"
            //P1.Y = 5;             //
            //P1.sym = 'V';        //-
            //----------------------------------------------------------------------------------------------------------------------


            //----------------------- Второй  вариант обьявления экземпляра класса и присвоение значений полям -----------------------
            //var P1 = new Point { sym = 'V', X = 2, Y = 5 };// значения присвоенны без приминения конструктора, поскольку в теле класса 
                                                           // родителя переменные  Модифицированны с доступом "Pablic" 
            //----------------------------------------------------------------------------------------------------------------------
                                                           

            //----------------------- Третий  вариант обьявления экземпляра класса и присвоение значений полям c Инкапсуляцией (сокрытием)-----------------------
            Point P1 = new Point(10, 10, 'V');  // имена переменных сокрыты от пользователя класса (инкапсулированны)
                                             // в отличии от варианта второго имена переменных 
                                            //спрятанны с помощью конструктора код которого прописсан в теле класса"Point"


            //----------------------------------------------------------------------------------------------------------------------
            //P1.Draww(); // Вывод на экран знаков с помощью процедуры (Метода )"Draww" входящего в состав экземпляра класса "Point"
                       //у которой в качестве входных параметров выступают поля экземпляра класса "Point"
            //----------------------------------------------------------------------------------------------------------------------




            //Console.SetCursorPosition(X1, Y1);//задаем координаты курсора
            //Console.Write(sym1); //выводим курсор на экран в заданных координатах

            // Draww(X1, Y1, sym1); // Вывод на экран знаков с помощью процедуры "Draww" 

            ////===============================================================================

            ////================================организация вывода на экран точки 2   ==========
            //int X2 = 10;
            //int Y2 = 10;

            //char sym2 = '#';

            //Point P2 = new Point(); // создаем экземпляр класса "Point" номер_2
            //P2.X = 10;         //-присваиваем значения полям экземпляра класса "Point"
            //P2.Y = 10;        //
            //P2.sym = 'L';    //-



            Point P2 = new Point(20, 20, 'L'); // имена переменных сокрыты от пользователя класса (инкапсулированны)
            //Point P2 = P1;  // работает но печатает в теже координаты и поэтому не видно
            //----------------------------------------------------------------------------------------------------------------------
            //P2.Draww(); // Вывод на экран знаков с помощью процедуры (Метода )"Draww" входящего в состав экземпляра класса "Point"
                        //у которой в качестве входных параметров выступают поля экземпляра класса "Point"
                        //----------------------------------------------------------------------------------------------------------------------

            //Draww(P2.X, P2.Y, P2.sym); // Вывод на экран знаков с помощью процедуры "Draww" у которой в качестве входных параметров выступают поля класса "Point"






            //Console.SetCursorPosition(X2, Y2);//задаем координаты курсора
            //Console.Write(sym2); //выводим курсор на экран в заданных координатах

            //Draww(X2, Y2, sym2); // Вывод на экран знаков с помощью процедуры "Draww" 

            ////===============================================================================

            ////=============================== организация вывода на экран точки 3    ========
            //int X3 = 20;
            //int Y3 = 20;

            //char sym3 = 'A';

            Point P3 = new Point(30, 30, 'A'); // имена переменных сокрыты от пользователя класса (инкапсулированны)

            //Console.SetCursorPosition(X1, Y1);//задаем координаты курсора
            //Console.Write(sym1); //выводим курсор на экран в заданных координатах

            //Draww(X3, Y3, sym3); // Вывод на экран знаков с помощью процедуры "Draww" 

            //P3.Draww(); // Вывод на экран знаков с помощью процедуры (Метода )"Draww" входящего в состав экземпляра класса "Point"
                        //у которой в качестве входных параметров выступают поля экземпляра класса "Point"
                        //----------------------------------------------------------------------------------------------------------------------

            ////===============================================================================

            ////================================организация вывода на экран точки 4   ==========
            //int X4 = 30;
            //int Y4 = 30;

            //char sym4 = 'D';

            Point P4 = new Point(40, 40, 'D'); // имена переменных сокрыты от пользователя класса (инкапсулированны)

            //Console.SetCursorPosition(X2, Y2);//задаем координаты курсора
            //Console.Write(sym2); //выводим курсор на экран в заданных координатах

            //Draww(X4, Y4, sym4); // Вывод на экран знаков с помощью процедуры "Draww" 

            //P4.Draww(); // Вывод на экран знаков с помощью процедуры (Метода )"Draww" входящего в состав экземпляра класса "Point"
            //у которой в качестве входных параметров выступают поля экземпляра класса "Point"
            //----------------------------------------------------------------------------------------------------------------------

            ////===============================================================================








            ////================================организация вывода на экран  4-х точек с помощью класса "List"   ==========

            //List<int> numList = new List<int>(); //Создаем переменную "numList", которая является ОБЬЕКТОМ класса "List" , эта переменная будет хранить список целочисленных переменных

            //numList.Add(0);//присваиваем первому элементу списка "numList" значение "0"
            //numList.Add(1);//присваиваем первому элементу списка "numList" значение "1"
            //numList.Add(2);//присваиваем первому элементу списка "numList" значение "2"

            //int X = numList[0];
            //int Y = numList[1];
            //int Z = numList[2];




            System.Console.WriteLine();// вставка пустой строки для отступа
            //...........................организация перебора с помощью цикла "foreach".............................................
            //foreach (int element_spiska_numList in numList)
            //{
            //    System.Console.WriteLine(element_spiska_numList); // вывод элементов массива на экран консоли
            //}
            //.....................................................................................................................


            //numList.RemoveAt(0); //удаление первого элемента из списка "numList"




            System.Console.WriteLine();// вставка пустой строки для отступа
            //...........................организация перебора с помощью цикла "foreach".............................................
            //foreach (int element_spiska_numList in numList)
            //{
            //    System.Console.WriteLine(element_spiska_numList); // вывод элементов массива на экран консоли после удаления первого элемента
            //}
            //.....................................................................................................................



            //............................................создание списка содержащего в себе  обьекты класса "Point"..................................................................................

            List<Point> pList = new List<Point>(); //Создаем переменную "pList", которая является ОБЬЕКТОМ класса "List" , эта переменная будет хранить список состоящий из обьектов класса "Point"
            pList.Add(P1);
            pList.Add(P2);
            pList.Add(P3);
            pList.Add(P4);


            System.Console.WriteLine();// вставка пустой строки для отступа
            //...........................организация перебора с помощью цикла "foreach".............................................
            foreach (Point element_spiska in pList)
            {
                //    System.Console.WriteLine(element_spiska_pList.Draww()); // вывод элементов списка "pList" на экран с помощью метода "Droww"(не заработало)

                element_spiska.Draww(); // вывод элементов списка "pList" на экран с помощью метода "Droww" (заработало)

            }
            //.....................................................................................................................

            
            
            
            //.......................................создание обьекта класса "HorizontalLine" без задаваемых параметрами координат начала и длинны...................................
            HorizontalLine line = new HorizontalLine();
            line.Drow();
            //....................................................................................................................................................................




            //.......................................создание обьекта класса "HorizontalLine" c задаваемыми параметрами координат начала и длинны...................................
            //HorizontalLine line = new HorizontalLine(10,20,60,'V');
            //line.Drow();
            //....................................................................................................................................................................






            ////===========================================================================================================



            //.................................пример создания и вывода классического массива........................................
            //int[] fibarray = new int[] { 0, 1, 1, 2, 3, 5, 8, 13 };//создание классического массива на 8-мь целочисленных элементов

            //System.Console.WriteLine();// вставка пустой строки

            //foreach (int element in fibarray)
            //{
            //    System.Console.WriteLine();// вставка пустой строки

            //    System.Console.WriteLine(element); // вывод элементов массива на экран консоли
            //}
            //System.Console.WriteLine();
            //.......................................................................................................................









            Console.ReadLine();
            //===============================================================================
        }

        






    }
}
