using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Collections.IEnumerable;

namespace ConsoleApplication1
{


    





class Program
    {
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% процедура вывода заданного символа в заданной координате %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        static void Draww(int X, int Y, char sym)
        {

            Console.SetCursorPosition(X, Y);//задаем координаты курсора
            Console.Write(sym); //выводим курсор на экран в заданных координатах

        }
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        static void Main(string[] args)   // точка входа в исполнение программы
        {
            ////=============================== организация вывода на экран точки 1    ========
            //int X1 = 5;
            //int Y1 = 5;

            //char sym1 = '*';

            //----------------------- Первый вариант обьявления экземпляра класса и присвоение значений полям -----------------------
            //Point P1 = new Point(); // создаем экземпляр класса "Point" номер_1
            //P1.X = 5;              //-присваиваем значения полям экземпляра  класса "Point"
            //P1.Y = 5;             //
            //P1.sym = 'V';        //-
            //----------------------------------------------------------------------------------------------------------------------


            //----------------------- Второй  вариант обьявления экземпляра класса и присвоение значений полям -----------------------
            //var P1 = new Point { sym = 'V', X = 2, Y = 5 };// значения присвоенны без приминения конструктора, поскольку в теле класса 
                                                           // родителя переменные  Модифицированны с доступом "Pablic" 
            //----------------------------------------------------------------------------------------------------------------------
                                                           

            //----------------------- Третий  вариант обьявления экземпляра класса и присвоение значений полям c Инкапсуляцией (сокрытием)-----------------------
            Point P1 = new Point(5, 5, 'V');  // имена переменных сокрыты от пользователя класса (инкапсулированны)
                                             // в отличии от варианта второго имена переменных 
                                            //спрятанны с помощью конструктора код которого прописсан в теле класса"Point"


            //----------------------------------------------------------------------------------------------------------------------
            P1.Draww(); // Вывод на экран знаков с помощью процедуры (Метода )"Draww" входящего в состав экземпляра класса "Point"
                       //у которой в качестве входных параметров выступают поля экземпляра класса "Point"
            //----------------------------------------------------------------------------------------------------------------------




            //Console.SetCursorPosition(X1, Y1);//задаем координаты курсора
            //Console.Write(sym1); //выводим курсор на экран в заданных координатах

            // Draww(X1, Y1, sym1); // Вывод на экран знаков с помощью процедуры "Draww" 

            ////===============================================================================

            ////================================организация вывода на экран точки 2   ==========
            //int X2 = 10;
            //int Y2 = 10;

            //char sym2 = '#';

            //Point P2 = new Point(); // создаем экземпляр класса "Point" номер_2
            //P2.X = 10;         //-присваиваем значения полям экземпляра класса "Point"
            //P2.Y = 10;        //
            //P2.sym = 'L';    //-



            Point P2 = new Point(10, 10, 'L'); // имена переменных сокрыты от пользователя класса (инкапсулированны)
            //Point P2 = P1;  // работает но печатает в теже координаты и поэтому не видно
            //----------------------------------------------------------------------------------------------------------------------
            P2.Draww(); // Вывод на экран знаков с помощью процедуры (Метода )"Draww" входящего в состав экземпляра класса "Point"
                        //у которой в качестве входных параметров выступают поля экземпляра класса "Point"
                        //----------------------------------------------------------------------------------------------------------------------

            //Draww(P2.X, P2.Y, P2.sym); // Вывод на экран знаков с помощью процедуры "Draww" у которой в качестве входных параметров выступают поля класса "Point"






            //Console.SetCursorPosition(X2, Y2);//задаем координаты курсора
            //Console.Write(sym2); //выводим курсор на экран в заданных координатах

            //Draww(X2, Y2, sym2); // Вывод на экран знаков с помощью процедуры "Draww" 

            ////===============================================================================

            ////=============================== организация вывода на экран точки 3    ========
            int X3 = 20;
            int Y3 = 20;

            char sym3 = 'A';

            //Console.SetCursorPosition(X1, Y1);//задаем координаты курсора
            //Console.Write(sym1); //выводим курсор на экран в заданных координатах

            Draww(X3, Y3, sym3); // Вывод на экран знаков с помощью процедуры "Draww" 

            ////===============================================================================

            ////================================организация вывода на экран точки 4   ==========
            int X4 = 30;
            int Y4 = 30;

            char sym4 = 'D';

            //Console.SetCursorPosition(X2, Y2);//задаем координаты курсора
            //Console.Write(sym2); //выводим курсор на экран в заданных координатах

            Draww(X4, Y4, sym4); // Вывод на экран знаков с помощью процедуры "Draww" 

            ////===============================================================================


            










            Console.ReadLine();
            //===============================================================================
        }

        






    }
}
